
# input file or path. Multiple paths allowed.
inputs=./sdfs/
inputs=./xmls/

# output path.
output=./

# path to log file.
log-file=output.log

# log level. If two options provided, the first one is for stdout, the
# second for log file.
# Valid options are CRITICAL, ERROR, WARNING, INFO, and DEBUG.
log-level=INFO
log-level=DEBUG

# Output file type.
# Valid options ALL, CSV, TXT, XML. 
output-file-type=ALL_OUT

# Frequency of printing output.
# Valid options ALL, LAST, Every_n, FIRSTandLAST. 
output-print-frequency=LAST

# List of all metrics to be printed into CSV file
# Valid options NONE, POWER, THROUGHPUT, LATENCY.
print-metric=NONE

[dse]

# Constraint programming model.
# Valid options NONECP, SDF, SDF_PR_ONLINE. 
model=SDF_PR_ONLINE

# Search type.
# Valid options NONESEARCH, FIRST, ALL, OPTIMIZE, OPTIMIZE_IT,
# GIST_ALL, GIST_OPT. 
search=OPTIMIZE_IT

# Optimization criteria.
# Valid options NONE, POWER, THROUGHPUT, LATENCY.
criteria=POWER

# search timeout. 0 means infinite. If two values are provided, the
# first one specifies the timeout for the first solution, and the
# second one for incremental time-out which is reset after each found
# solution.
timeout=0
timeout=0

# number of parallel search for threads (0=all procs)
threads=0

# Depth for no good generation
luby_scale=0

# Luby scale
noGoodDepth=75

# Throughput propagator type.
# Valid options SSE, MCR. 
th_prop=SSE

[presolver]

# Constraint pre-solving model.
# Valid options NONE, ONE_PROC_MAPPINGS.
model=NONE

# Search type.
# Valid options NONESEARCH, FIRST, ALL, OPTIMIZE, OPTIMIZE_IT,
# GIST_ALL, GIST_OPT. 
search=NONESEARCH

# Multi-step approach using heuristics. Each step uses the optimization
# criterion in the order as in dse.criteria.
# Valid options NONE, TODAES.
heuristic=NONE

# Search type for the heuristic steps. Final step uses search type as
# defined in dse.search. 
# Valid options NONESEARCH, FIRST, ALL, OPTIMIZE, OPTIMIZE_IT,
# GIST_ALL, GIST_OPT. 
multi-search=NONESEARCH

# search timeout. 0 means infinite. If two values are provided, the
# first one specifies the timeout for the first solution, and the
# second one for incremental time-out which is reset after each found
# solution.
timeout=0
timeout=0
